<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.vicmob.shoppingmall.web.goodsAPI.dao.MallGoodsSecondClassifyMapper" >
  <resultMap id="BaseResultMap" type="com.vicmob.shoppingmall.web.goodsAPI.entity.MallGoodsSecondClassify" >
    <id column="secondClassifyId" property="secondclassifyid" jdbcType="INTEGER" />
    <result column="minaId" property="minaid" jdbcType="INTEGER" />
    <result column="classifyId" property="classifyid" jdbcType="INTEGER" />
    <result column="secondClassifyName" property="secondclassifyname" jdbcType="VARCHAR" />
    <result column="classifyPictureUrl" property="classifypictureurl" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    secondClassifyId, minaId, classifyId, secondClassifyName, classifyPictureUrl, sort
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vicmob.shoppingmall.web.goodsAPI.entity.MallGoodsSecondClassifyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mall_goods_second_classify
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.vicmob.shoppingmall.web.goodsAPI.entity.MallGoodsSecondClassifyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mall_goods_second_classify
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.vicmob.shoppingmall.web.goodsAPI.entity.MallGoodsSecondClassifyExample" >
    delete from mall_goods_second_classify
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.vicmob.shoppingmall.web.goodsAPI.entity.MallGoodsSecondClassifyExample" resultType="java.lang.Integer" >
    select count(*) from mall_goods_second_classify
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mall_goods_second_classify
    <set >
      <if test="record.secondclassifyid != null" >
        secondClassifyId = #{record.secondclassifyid,jdbcType=INTEGER},
      </if>
      <if test="record.minaid != null" >
        minaId = #{record.minaid,jdbcType=INTEGER},
      </if>
      <if test="record.classifyid != null" >
        classifyId = #{record.classifyid,jdbcType=INTEGER},
      </if>
      <if test="record.secondclassifyname != null" >
        secondClassifyName = #{record.secondclassifyname,jdbcType=VARCHAR},
      </if>
      <if test="record.classifypictureurl != null" >
        classifyPictureUrl = #{record.classifypictureurl,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mall_goods_second_classify
    set secondClassifyId = #{record.secondclassifyid,jdbcType=INTEGER},
      minaId = #{record.minaid,jdbcType=INTEGER},
      classifyId = #{record.classifyid,jdbcType=INTEGER},
      secondClassifyName = #{record.secondclassifyname,jdbcType=VARCHAR},
      classifyPictureUrl = #{record.classifypictureurl,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mall_goods_second_classify
    where secondClassifyId = #{secondclassifyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mall_goods_second_classify
    where secondClassifyId = #{secondclassifyid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vicmob.shoppingmall.web.goodsAPI.entity.MallGoodsSecondClassify" useGeneratedKeys="true" keyProperty="secondclassifyid" >
    insert into mall_goods_second_classify (minaId, classifyId, secondClassifyName, 
      classifyPictureUrl, sort)
    values (#{minaid,jdbcType=INTEGER}, #{classifyid,jdbcType=INTEGER}, #{secondclassifyname,jdbcType=VARCHAR}, 
      #{classifypictureurl,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.vicmob.shoppingmall.web.goodsAPI.entity.MallGoodsSecondClassify" useGeneratedKeys="true" keyProperty="secondclassifyid" >
    insert into mall_goods_second_classify
    <trim prefix="(" suffix=")" suffixOverrides="," >
      minaId,
      classifyId,
      secondClassifyName,
      classifyPictureUrl,
      sort,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{minaid,jdbcType=INTEGER},
      #{classifyid,jdbcType=INTEGER},
      #{secondclassifyname,jdbcType=VARCHAR},
      #{classifypictureurl,jdbcType=VARCHAR},
      #{sort,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vicmob.shoppingmall.web.goodsAPI.entity.MallGoodsSecondClassify" >
    update mall_goods_second_classify
    <set >
      <if test="minaid != null" >
        minaId = #{minaid,jdbcType=INTEGER},
      </if>
      <if test="classifyid != null" >
        classifyId = #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="secondclassifyname != null" >
        secondClassifyName = #{secondclassifyname,jdbcType=VARCHAR},
      </if>
      <if test="classifypictureurl != null" >
        classifyPictureUrl = #{classifypictureurl,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where secondClassifyId = #{secondclassifyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vicmob.shoppingmall.web.goodsAPI.entity.MallGoodsSecondClassify" >
    update mall_goods_second_classify
    set minaId = #{minaid,jdbcType=INTEGER},
      classifyId = #{classifyid,jdbcType=INTEGER},
      secondClassifyName = #{secondclassifyname,jdbcType=VARCHAR},
      classifyPictureUrl = #{classifypictureurl,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where secondClassifyId = #{secondclassifyid,jdbcType=INTEGER}
  </update>

  <select id="getAllSecondClassifyByClassifyId" resultMap="BaseResultMap">
    select
     <include refid="Base_Column_List" />
    from mall_goods_second_classify where minaId = #{minaId} and classifyId = #{classifyId} and
    secondClassifyId in (
    select DISTINCT secondClassifyId from
    (select  a.*,SUM(b.stock) as total from mall_goods a
    LEFT JOIN mall_specification b on a.goodsId = b.goodsId and a.goodsId not in
    (select DISTINCT goodsId from mall_goods_collage_activity where deleteFlag = 0 and (collageActivityStatus = 0 or collageActivityStatus = 1))
    where a.deleteFlag = 0 and a.saleFlag = 1 and a.minaId = #{minaId} GROUP BY a.goodsId)m where m.total>0)
  </select>

  <select id="getAllSecondClassifyByEdit" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mall_goods_second_classify where minaId = #{minaId} and classifyId = #{classifyId} and
    secondClassifyId in (select DISTINCT secondClassifyId FROM (select a.*,SUM(b.stock) as total from mall_goods a
    LEFT JOIN mall_specification b on a.goodsId = b.goodsId
    where a.minaId = #{minaId} and a.deleteFlag = 0 and a.saleFlag = 1 GROUP BY a.goodsId)m where m.total>0)
  </select>
</mapper>